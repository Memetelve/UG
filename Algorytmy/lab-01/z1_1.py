import math
from timeit import default_timer as timer


def f1(n):
    s = 0
    for j in range(1, n):
        s = s+1/j
    return s


def f2(n):
    s = 0
    for j in range(1, n):
        for k in range(1, n):
            s = s+k/j
    return s


def f3(n):
    s = 0
    for j in range(1, n):
        for k in range(j, n):
            s = s+k/j
    return s


def f4(n):
    s = 0
    for j in range(1, n):
        k = 2
        while k <= n:
            s = s+k/j
            k = k*2
    return s


def f5(n):
    s = 0
    k = 2
    while k <= n:
        s = s+1/k
        k = k*2
    return s


nn = [2000, 4000, 8000, 16000, 32000]


print("\n\nf1 -------")
for n in nn:
    start = timer()
    f1(n)
    stop = timer()
    Tn = stop-start
    Fn = n
    print(n, Tn, Fn/Tn)

print("\n\nf2 -------")
for n in nn:
    start = timer()
    f2(n)
    stop = timer()
    Tn = stop-start
    Fn = n**2
    print(n, Tn, Fn/Tn)

print("\n\nf3 -------")
for n in nn:
    start = timer()
    f3(n)
    stop = timer()
    Tn = stop-start
    Fn = n**2
    print(n, Tn, Fn/Tn)

print("\n\nf4 -------")
for n in nn:
    start = timer()
    f4(n)
    stop = timer()
    Tn = stop-start
    Fn = n*math.log(n, 2)
    print(n, Tn, Fn/Tn)

print("\n\nf5 -------")
for n in nn:
    start = timer()
    f5(n)
    stop = timer()
    Tn = stop-start
    Fn = math.log(n, 2)
    print(n, Tn, Fn/Tn)

# inne funkcje czasu:

# Fn=math.log(n,2)
# Fn=n
# Fn=100*n
# Fn=n*math.log(n,2)
# Fn=n*n


# f1 -------
# 2000 0.00010039999961009016 19920318.802461438
# 4000 0.00018750000026557245 21333333.30311709
# 8000 0.00036499999987427145 21917808.22672793
# 16000 0.0007346000002144137 21780560.843084604
# 32000 0.0014660000001640583 21828103.681049738


# f2 -------
# 2000 0.1880607999996755 21269717.027721364
# 4000 0.7135057999998935 22424484.84651756
# 8000 2.8347211000000243 22577176.99282637
# 16000 11.370716600000378 22513972.426328126
# 32000 44.53259920000028 22994391.0392725


# f3 -------
# 2000 0.09743930000013279 41051198.0278445
# 4000 0.35989969999991445 44456830.61142814
# 8000 1.4005695999999261 45695694.09474786
# 16000 5.600258200000098 45712178.05636095
# 32000 22.24811090000003 46026379.70489435


# f4 -------
# 2000 0.0014564999996764527 15057719.584068699
# 4000 0.003557700000328623 13453393.241202816
# 8000 0.006401099999948201 16204445.2169371
# 16000 0.015332800000123825 14573499.201241054
# 32000 0.0313202000002093 15290614.271492088


# f5 -------
# 2000 2.8500000098574674e-05 384764.35953452863
# 4000 2.9000002541579306e-06 4126132.1503354753
# 8000 2.499999936844688e-06 5186313.844882143
# 16000 2.189999986512703e-05 637707.048889111
# 32000 2.399999630142702e-06 6235744.4129156945
